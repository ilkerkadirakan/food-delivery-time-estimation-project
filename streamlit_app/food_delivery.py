import streamlit as st
import pandas as pd
import joblib
import numpy as np

def handle_outliers(column):
    Q1 = np.percentile(column, 25)
    Q3 = np.percentile(column, 75)
    IQR = Q3 - Q1
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR
    column[column < lower_bound] = lower_bound
    column[column > upper_bound] = upper_bound
    return column


# Model ve veri yÃ¼kleme
model_path = "food-delivery-time-estimation-project/streamlit_app/model.pkl"
data_path = "food-delivery-time-estimation-project/streamlit_app/dataset.pkl"

model_pipeline = joblib.load(model_path)
with open(data_path, "rb") as f:
    data = joblib.load(f)
try:
    model=joblib.load(model_path)
    st.success("Model baÅŸarÄ±yla yÃ¼klendi")
except Exception as e:
    st.error(f"Model yÃ¼klenirken hata oluÅŸtu: {e}")
    st.stop()

# BaÅŸlÄ±k
st.title("ğŸ“¦ HÄ±zlÄ± Teslimat SÃ¼resi Tahmini")
st.write("Teslimat sÃ¼resini tahmin etmek iÃ§in aÅŸaÄŸÄ±daki bilgileri girin.")

# Kategorik deÄŸerlerin TÃ¼rkÃ§e ve Ä°ngilizce eÅŸlemesi
weather_dict = {'RÃ¼zgarlÄ±': 'Windy', 'AÃ§Ä±k': 'Clear', 'Sisli': 'Foggy', 'YaÄŸmurlu': 'Rainy', 'KarlÄ±': 'Snowy'}
traffic_dict = {'DÃ¼ÅŸÃ¼k': 'Low', 'Orta': 'Medium', 'YÃ¼ksek': 'High'}
time_of_day_dict = {'Ã–ÄŸle': 'Afternoon', 'AkÅŸam': 'Evening', 'Gece': 'Night', 'Sabah': 'Morning'}
vehicle_type_dict = {'Scooter': 'Skuter', 'Motor': 'Bike', 'Araba': 'Car'}

# KullanÄ±cÄ± girdileri
distance_km = st.number_input("Mesafe (km)", min_value=0.1, value=5.0)
weather = st.selectbox("Hava Durumu", list(weather_dict.keys()))
traffic = st.selectbox("Trafik Seviyesi", list(traffic_dict.keys()))
time_of_day = st.selectbox("GÃ¼nÃ¼n Saati", list(time_of_day_dict.keys()))
vehicle_type = st.selectbox("AraÃ§ TÃ¼rÃ¼", list(vehicle_type_dict.keys()))
preparation_time = st.number_input("HazÄ±rlÄ±k SÃ¼resi (dk)", min_value=1, value=15)
courier_experience = st.number_input("Kurye Deneyimi (yÄ±l)", min_value=0.0, value=1.0)

# Tahmin butonu
tahmin_butonu = st.button("Tahmin Yap")

if tahmin_butonu:
    # KullanÄ±cÄ± girdilerini DataFrame formatÄ±na Ã§evir ve TÃ¼rkÃ§e deÄŸerleri Ä°ngilizce'ye Ã§evir
    input_data = pd.DataFrame({
        "Distance_km": [distance_km],
        "Weather": [weather_dict[weather]],  # TÃ¼rkÃ§e'den Ä°ngilizce'ye dÃ¶nÃ¼ÅŸÃ¼m
        "Traffic_Level": [traffic_dict[traffic]],  # TÃ¼rkÃ§e'den Ä°ngilizce'ye dÃ¶nÃ¼ÅŸÃ¼m
        "Time_of_Day": [time_of_day_dict[time_of_day]],  # TÃ¼rkÃ§e'den Ä°ngilizce'ye dÃ¶nÃ¼ÅŸÃ¼m
        "Vehicle_Type": [vehicle_type_dict[vehicle_type]],  # TÃ¼rkÃ§e'den Ä°ngilizce'ye dÃ¶nÃ¼ÅŸÃ¼m
        "Preparation_Time_min": [preparation_time],
        "Courier_Experience_yrs": [courier_experience]
    })


    # Modeli kullanarak tahmin yap
    predicted_time = model_pipeline.predict(input_data)[0]

    st.success(f"Tahmini Teslimat SÃ¼resi: {predicted_time:.2f} dakika")
